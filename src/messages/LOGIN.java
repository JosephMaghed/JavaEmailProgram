/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package messages;

import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joseph Maged
 */

public class LOGIN extends javax.swing.JFrame {
     private static Socket link = null;
    private static String message ,for_name,option,out,readOut;
     private static InetAddress host;
 private static final int PORT = 5472;
 private static String name;
 private static Scanner networkInput, userEntry;
 private static PrintWriter networkOutput;
 private static final String[] names=new String[1000];
    
    
static final String DB_URL = "jdbc:mysql://localhost/network";
   static final String USER = "root";
   static final String PASS = "";
   static  String userName ;
   static Long start=System.currentTimeMillis();
    /**
     * Creates new form LOGIN
     */
    public LOGIN() {
        initComponents();
       
        Rname.hide();
        Remail.hide();
        Rpassword.hide();
        RNAME.hide();
        REMAIL.hide();
        RPASSWORD.hide();
        sign.hide();
        to.hide();
        cc.hide();
        body.hide();
        inbox.hide();
        INBOX.hide();
        send.hide();
        logout.hide();
        read.hide();
        write.hide();
        send.hide();
        TOLabel.hide();
        CCLabel.hide();
        header.hide();
        lheader.hide();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        Lname = new javax.swing.JTextField();
        Lpassword = new javax.swing.JTextField();
        LNAME = new javax.swing.JLabel();
        LPASSWORD = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        register = new javax.swing.JButton();
        Remail = new javax.swing.JTextField();
        Rname = new javax.swing.JTextField();
        Rpassword = new javax.swing.JTextField();
        RNAME = new javax.swing.JLabel();
        REMAIL = new javax.swing.JLabel();
        RPASSWORD = new javax.swing.JLabel();
        sign = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        read = new javax.swing.JButton();
        write = new javax.swing.JButton();
        to = new javax.swing.JTextField();
        cc = new javax.swing.JTextField();
        body = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        INBOX = new javax.swing.JScrollPane();
        inbox = new javax.swing.JTable();
        TOLabel = new javax.swing.JLabel();
        CCLabel = new javax.swing.JLabel();
        lheader = new javax.swing.JLabel();
        header = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LNAME.setText("UserName:");

        LPASSWORD.setText("Password");

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        register.setText("Register");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        RNAME.setText("UserName:");

        REMAIL.setText("Email");

        RPASSWORD.setText("Password");

        sign.setText("Sign/up");
        sign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signActionPerformed(evt);
            }
        });

        logout.setText("LogOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        read.setText("INBOX");
        read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readActionPerformed(evt);
            }
        });

        write.setText("write");
        write.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeActionPerformed(evt);
            }
        });

        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        inbox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sender", "cc", "header", "message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        INBOX.setViewportView(inbox);
        if (inbox.getColumnModel().getColumnCount() > 0) {
            inbox.getColumnModel().getColumn(1).setResizable(false);
        }

        TOLabel.setText("TO:");

        CCLabel.setText("CC:");

        lheader.setText("Header");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(LNAME)
                                    .addGap(2, 2, 2))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(RNAME)
                                        .addComponent(LPASSWORD))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(REMAIL)
                                    .addComponent(RPASSWORD))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(register)
                                        .addComponent(Remail, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                        .addComponent(Rname)
                                        .addComponent(Rpassword)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addComponent(sign)))
                                    .addComponent(login)
                                    .addComponent(Lpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(logout))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(send))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(CCLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(cc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TOLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(read)))
                                .addGap(18, 18, 18)
                                .addComponent(lheader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(write)
                                .addGap(442, 442, 442))))
                    .addComponent(INBOX, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LNAME)))
                    .addComponent(logout)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(read)
                            .addComponent(write)
                            .addComponent(lheader)
                            .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LPASSWORD))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(login))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TOLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(register)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RNAME)
                            .addComponent(Rname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Remail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(REMAIL)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CCLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(body, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RPASSWORD))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sign))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(send)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(INBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // TODO add your handling code here:
        
        Rname.setVisible(true);
        Remail.setVisible(true);
        Rpassword.setVisible(true);
        RNAME.setVisible(true);
        REMAIL.setVisible(true);
        RPASSWORD.setVisible(true);
        sign.setVisible(true);
        CCLabel.setVisible(true);
  TOLabel.setVisible(true);
    }//GEN-LAST:event_registerActionPerformed

    private void signActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signActionPerformed
        // TODO add your handling code here:
          try(Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
         Statement stmt = conn.createStatement();
      ) {		      
         // Execute a query
                   String name=Rname.getText();
                   
                   String email=Remail.getText();
                   userName=email;
                   String pass=Rpassword.getText();
                String sql = "INSERT INTO `messageuser`(`name`, `email`, `pass`) VALUES ('"+name+"','"+email+"','"+pass+"');";
         stmt.executeUpdate(sql);
         
         
         System.out.println("Inserted records into the table...");   	  
      } catch (SQLException e) {
         e.printStackTrace();
      }
        Rname.hide();
        Remail.hide();
        Rpassword.hide();
        RNAME.hide();
        REMAIL.hide();
        RPASSWORD.hide();
        
         Lname.hide();
        Lpassword.hide();
        LNAME.hide();
        LPASSWORD.hide();
        sign.hide();
        register.hide();
        login.hide();
        
         send.setVisible(true);
                 write.setVisible(true);
        read.setVisible(true);
        logout.setVisible(true);
        INBOX.setVisible(true);
        inbox.setVisible(true);
        body.setVisible(true);
 cc.setVisible(true);
 to.setVisible(true);
          header.setVisible(true);
        lheader.setVisible(true);
          
 
         

        
        
    }//GEN-LAST:event_signActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        String email=Lname.getText();
        String pass=Lpassword.getText();
        String QUERY ="SELECT email, pass FROM messageuser WHERE email='"+email+"'and pass='"+pass+"';";
         try(Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
         Statement stmt = conn.createStatement();
               

         ResultSet rs = stmt.executeQuery(QUERY);) {
         // Extract data from result set
         int i=0;
         /*while (rs.next()) {
           
           i++;
         }*/
         if(!rs.next()){
             System.out.println("login error");
         }
         else{
             userName=rs.getString("email");
             
             Rname.hide();
        Remail.hide();
        Rpassword.hide();
        RNAME.hide();
        REMAIL.hide();
        RPASSWORD.hide();
        
         Lname.hide();
        Lpassword.hide();
        LNAME.hide();
        LPASSWORD.hide();
        sign.hide();
        register.hide();
        login.hide();
        header.setVisible(true);
        lheader.setVisible(true);
         send.setVisible(true);
                 write.setVisible(true);
        read.setVisible(true);
        logout.setVisible(true);
        
        body.setVisible(true);
 cc.setVisible(true);
 to.setVisible(true);
 CCLabel.setVisible(true);
  TOLabel.setVisible(true);
         }
      } catch (SQLException e) {
         e.printStackTrace();
      } 
        
        //hide
        
    }//GEN-LAST:event_loginActionPerformed

    private void readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readActionPerformed
        // TODO add your handling code here:
        Long start=System.currentTimeMillis();
        DefaultTableModel tblModel=(DefaultTableModel)inbox.getModel();
        //tblModel.deleteRow();
        String QUERY = "SELECT * FROM messages where reciever='"+userName+"';";
           try(Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(QUERY);) {
         // Extract data from result set
         while (rs.next()) {
            // Retrieve by column name
            String data[]={rs.getString("sender"),rs.getString("cc"),rs.getString("header"),rs.getString("message")};
            
           tblModel.addRow(data);
         }
      } catch (SQLException e) {
         e.printStackTrace();
      } 
        
                INBOX.setVisible(true);
                inbox.setVisible(true);
                        send.hide();
                         cc.hide();
                         to.hide();
                         body.hide();
                         CCLabel.hide();
  TOLabel.hide();

Long end=System.currentTimeMillis();
System.out.println(end-start);


    }//GEN-LAST:event_readActionPerformed

    private void writeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeActionPerformed
        // TODO add your handling code here:
         INBOX.hide();
                inbox.hide();
                        send.setVisible(true);
                         cc.setVisible(true);
                         to.setVisible(true);
                         body.setVisible(true);
                         CCLabel.setVisible(true);
  TOLabel.setVisible(true);
    }//GEN-LAST:event_writeActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        Long start=System.currentTimeMillis();
        
        JFileChooser j =new JFileChooser();
          try(Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
         Statement stmt = conn.createStatement();
      ) {		      
         // Execute a query
                  String TO=to.getText();
                  String h=header.getText();
                  String[] multRe=TO.split(",");
                  
                String CC=cc.getText();  
                String message=body.getText();  
                for(String a:multRe){
                String sql = "INSERT INTO `messages`(`sender`, `reciever`,`message`,`cc`,header) VALUES ('"+userName+"','"+a+"','"+message+"','"+CC+"','"+h+"');";
         stmt.executeUpdate(sql);}
         
         System.out.println("Inserted records into the table...");   	  
      } catch (SQLException e) {
         e.printStackTrace();
      }
          Long end=System.currentTimeMillis();
          System.out.println(end-start);

          
    }//GEN-LAST:event_sendActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        
           Rname.setVisible(true);
        Remail.setVisible(true);
        Rpassword.setVisible(true);
        RNAME.setVisible(true);
        REMAIL.setVisible(true);
        RPASSWORD.setVisible(true);
        
         Lname.setVisible(true);
        Lpassword.setVisible(true);
        LNAME.setVisible(true);
        LPASSWORD.setVisible(true);
        sign.setVisible(true);
        register.setVisible(true);
        login.setVisible(true);
        //se
        INBOX.hide();
                inbox.hide();
        header.hide();
        lheader.hide();
         send.hide();
                 write.hide();
        read.hide();
        logout.hide();
        
        body.hide();
 cc.hide();
 to.hide();
 CCLabel.hide();
  TOLabel.hide();
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
         Long end=System.currentTimeMillis();
System.out.println(end-start);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CCLabel;
    private javax.swing.JScrollPane INBOX;
    private javax.swing.JLabel LNAME;
    private javax.swing.JLabel LPASSWORD;
    private javax.swing.JTextField Lname;
    private javax.swing.JTextField Lpassword;
    private javax.swing.JLabel REMAIL;
    private javax.swing.JLabel RNAME;
    private javax.swing.JLabel RPASSWORD;
    private javax.swing.JTextField Remail;
    private javax.swing.JTextField Rname;
    private javax.swing.JTextField Rpassword;
    private javax.swing.JLabel TOLabel;
    private javax.swing.JTextField body;
    private javax.swing.JTextField cc;
    private javax.swing.JTextField header;
    private javax.swing.JTable inbox;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel lheader;
    private javax.swing.JButton login;
    private javax.swing.JButton logout;
    private javax.swing.JButton read;
    private javax.swing.JButton register;
    private javax.swing.JButton send;
    private javax.swing.JButton sign;
    private javax.swing.JTextField to;
    private javax.swing.JButton write;
    // End of variables declaration//GEN-END:variables
}
